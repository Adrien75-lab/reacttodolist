{"version":3,"sources":["components/ToDo.js","components/ToDoList.js","components/NavBar.js","components/AddTask.js","data.js","components/App.js","index.js"],"names":["ToDo","state","completed","props","task","toggleCompleted","setState","prevState","onToggleCompleted","id","className","this","name","onClick","React","Component","ToDoList","filteredTasks","tasks","match","console","log","params","filter","length","Fragment","map","NavBar","onDeleteCompleted","to","exact","AddTask","handleSubmit","event","preventDefault","onAddTask","newTask","value","history","push","onSubmit","htmlFor","type","required","ref","elem","data","App","localStorage","getItem","JSON","parse","newTaskName","uniqid","process","setTimeout","setItem","stringify","taskId","taskToUpdate","find","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fd3df00c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nclass ToDo extends React.Component{\r\n  state = {\r\n    completed: this.props.task.completed\r\n  }\r\n\r\n  toggleCompleted = () => {\r\n    this.setState(prevState => ({\r\n      completed: !prevState.completed\r\n    }))\r\n    this.props.onToggleCompleted(this.props.task.id)\r\n  }\r\n    render(){\r\n        return(\r\n            <li className={\"list-group-item \" + (this.state.completed ? \"bg-success text-white\" : null)}>\r\n            {this.props.task.name}\r\n            <button className={\"btn btn-sm btn-outline-success float-end\" + (this.state.completed ? \"btn-outline-light\": null)} onClick={ () => this.toggleCompleted() }>\r\n              <FaCheck />\r\n            </button>\r\n          </li>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default ToDo","import React from \"react\";\r\n\r\nimport ToDo from \"./ToDo\";\r\n\r\nconst ToDoList = ({ tasks, match, onToggleCompleted }) => {\r\n  let filteredTasks;\r\n  console.log(match.params);\r\n\r\n  switch (match.params.filter) {\r\n    case \"completed\":\r\n      filteredTasks = tasks.filter((task) => task.completed);\r\n      break;\r\n    default:\r\n      filteredTasks = tasks;\r\n  }\r\n  if (filteredTasks.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"m-3\">My Todo List</h1>\r\n        <ul className=\"list-group m-3\">\r\n          <li className=\"list-group-item\">No task to display here</li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"m-3\">My Todo List</h1>\r\n        <ul className=\"list-group m-3\">\r\n          {filteredTasks.map((task) => \r\n            <ToDo task={task} key={task.id} onToggleCompleted = {onToggleCompleted} />\r\n          )}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport {\r\n  FaListAlt,\r\n  FaCheckSquare,\r\n  FaPlusSquare,\r\n  FaTrash,\r\n} from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nconst NavBar = ({onDeleteCompleted}) => (\r\n  <footer className=\"p-3 bg-light\">\r\n    <div className=\"btn-group\">\r\n      <NavLink to=\"/\" className=\"btn btn-outline-dark\" exact={true}>\r\n        <FaListAlt />\r\n      </NavLink>\r\n      <NavLink to=\"/completed\" className=\"btn btn-outline-dark\">\r\n        <FaCheckSquare />\r\n      </NavLink>\r\n      <NavLink to=\"/add-task\" className=\"btn btn-outline-dark\">\r\n        <FaPlusSquare />\r\n      </NavLink>\r\n    </div>\r\n    <button className=\"btn btn-sm btn-outline-dark float-end\" onClick={onDeleteCompleted}>\r\n      <FaTrash />\r\n    </button>\r\n  </footer>\r\n);\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\n\r\nclass AddTask extends React.Component{\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.onAddTask(this.newTask.value)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <h1 className=\"m-3\">New Task</h1>\r\n                <div className=\"card m-3\">\r\n                    <form className=\"card-body\" onSubmit={event => this.handleSubmit(event) }>\r\n                        <div className=\"form-group m-2\">\r\n                            <label htmlFor=\"taskName\">Task Name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\" required ref={elem =>this.newTask = elem}></input>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary m-2\">Add Task</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask","let data = [\r\n    {id:'123456a', name:\" Wake up\", completed: false},\r\n    {id:'123456b', name:\" Take a coffee\", completed: false},\r\n    {id:'123456c', name:\" Drink coffee\", completed: false},\r\n    {id:'123456d', name:\"Eat breakfast\", completed: false},\r\n    {id:'123456e', name:\" Start Teams\", completed: false},\r\n]\r\n\r\nexport default data","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport NavBar from \"./NavBar\";\r\nimport AddTask from \"./AddTask\";\r\nimport data from \"../data\";\r\nimport uniqid from 'uniqid';\r\nclass App extends React.Component {\r\n \r\n  state = {\r\n    tasks : localStorage.getItem('data') ? JSON.parse( localStorage.getItem('data') ) : data\r\n  }\r\n  onAddTask = (newTaskName) => {\r\n    let newTask = {\r\n      id: uniqid.process(),\r\n      name: newTaskName,\r\n      completed : false\r\n    }\r\n    this.setState(prevState => ({\r\n      tasks : [...prevState.tasks, newTask]\r\n\r\n    }))\r\n    setTimeout( () => {\r\n      localStorage.setItem('data',JSON.stringify(this.state.tasks))\r\n    },500)\r\n  }\r\n  onToggleCompleted = (taskId) => {\r\n    let taskToUpdate = this.state.tasks.find( task => task.id === taskId )\r\n    taskToUpdate.completed  = !taskToUpdate.completed\r\n\r\n    this.setState(prevState => (\r\n      prevState.tasks.map(task =>{\r\n        // Redefini l'Ã©tat\r\n        return task.id === taskId ? taskToUpdate : task\r\n      })\r\n    ))\r\n      localStorage.setItem('data',JSON.stringify(this.state.tasks));\r\n  }\r\n  onDeleteCompleted = () => {\r\n    this.setState(prevState => {\r\n      let newState = prevState.tasks.filter(task => !task.completed )\r\n      return {\r\n        tasks : newState\r\n      }\r\n    })\r\n    setTimeout( () => {\r\n      localStorage.setItem('data',JSON.stringify(this.state.tasks))\r\n    },500)\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <section>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} /> } />\r\n            <Route path=\"/:filter?\" render={ (props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} /> } />\r\n            <Route path=\"/\" component={ToDoList} />\r\n          </Switch>\r\n          <NavBar onDeleteCompleted ={this.onDeleteCompleted} />\r\n        </BrowserRouter>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './components/App';\nimport './custom.css';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}